// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectRunner.Infra.Data.Context;

namespace ProjectRunner.Infra.Data.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    [Migration("20210703020556_AddInitialTables")]
    partial class AddInitialTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ProjectRunner.Common.Entities.Executable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("FileName")
                        .HasColumnType("Varchar(255)")
                        .HasColumnName("Path");

                    b.HasKey("Id");

                    b.ToTable("Executable");
                });

            modelBuilder.Entity("ProjectRunner.Common.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExecutableArguments")
                        .HasColumnType("Varchar(255)")
                        .HasColumnName("ExecutableArguments");

                    b.Property<int>("ExecutableId")
                        .HasColumnType("Int(10)")
                        .HasColumnName("ExecutableId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("Varchar(255)")
                        .HasColumnName("Path");

                    b.HasKey("Id");

                    b.HasIndex("ExecutableId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectRunner.Common.Entities.Project", b =>
                {
                    b.HasOne("ProjectRunner.Common.Entities.Executable", "Executable")
                        .WithMany("Projects")
                        .HasForeignKey("ExecutableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Executable");
                });

            modelBuilder.Entity("ProjectRunner.Common.Entities.Executable", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
